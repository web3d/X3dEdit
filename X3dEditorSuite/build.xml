<?xml version="1.0" encoding="UTF-8"?>
<!-- You may freely edit this file. See harness/README in the NetBeans platform -->
<!-- for some information on what you could do (e.g. targets to override). -->
<!-- If you delete this file and reopen the project it will be recreated. -->
<project name="X3dEditorSuite" basedir="." default="quick.run" xmlns:antelope="antlib:ise.antelope.tasks">
    <description>Builds the module suite X3dEditorSuite.</description>

    <import file="nbproject/build-impl.xml"/>
    <import file="x3dedit-deploy-tasks.xml"/>

    <property file="nbproject/project.properties"/>
    
    <!--
    ============
    INIT SECTION
    ============
    -->

    <target name="platformInitialize" depends="-init,platformType,initializeWindows,initializeUnix,initializeMac"/>
    <target name="platformType">
        <condition property="isWindows" >
            <os family="windows"/>
        </condition>
        <condition property="isMac" >
            <os family="mac"/>
        </condition>

        <!-- Based on Apache Ant user-manual example -->
        <condition property="isUnixNotMac">
            <and>
                <os family="unix"/>

                <not>
                    <equals arg1="${os.name}" arg2="Mac OS X"/>
                </not>
            </and>
        </condition>
    </target>

    <target name="initializeWindows" if="isWindows" depends="initializeXj3d">
        <property name="os"        value="win"/>
        <property name="run.xj3d.args"  value="${win_runarguments}"/>
        <property name="run.args"  value="${common.args} ${win.run.args}"/>
    </target>
    <target name="initializeUnix" if="isUnixNotMac" depends="initializeXj3d">
        <property name="os"        value="unix"/>
        <property name="run.xj3d.args"  value="${unix_runarguments}"/>
        <property name="run.args"  value="${common.args} ${unix.run.args}"/>
    </target>
    <target name="initializeMac" if="isMac" depends="initializeXj3d">
        <property name="os"        value="mac"/>
        <property name="run.xj3d.args"  value="${mac_runarguments}"/>
        <property name="run.args"  value="${common.args} ${mac.run.args}"/>
    </target>
    <target name="initializeXj3d" >
        <property name="win_runarguments"  value="${common.xj3d.args} ${xj3darg4}"/>
        <property name="unix_runarguments" value="${common.xj3d.args} ${xj3darg6}"/>
        <property name="mac_runarguments"  value="${common.xj3d.args} ${xj3darg8} ${xj3darg9} ${xj3darg10} ${xj3darg11} ${xj3darg14}"/>
    </target>
    
    <!-- As of NB 12.3, this ide/modules/ext jar seems to be missing during suite.build-mac -->
    <property name="jcodings-1.0.18.jar" value="jcodings-1.0.18.jar"/>
    
    <!-- Override to include missing ide jar -->
    <target name="build-mac" depends="suite.build-mac">
        <copy todir="${dist.dir}/${app.name}.app/Contents/Resources/${app.name}/ide/modules/ext">
            <fileset dir="${nbplatform.active.dir}/ide/modules/ext">
                <include name="${jcodings-1.0.18.jar}"/>
            </fileset>
        </copy>
    </target>
    
    <!-- Override to include missing ide jar for the zip distro -->
    <target name="build-zip" depends="build,build-launchers" description="Builds a ZIP distribution of the suite, launchers, and selected modules from the platform.">
        <mkdir dir="${dist.dir}"/>
        <!-- pathfileset does not support 'prefix' and 'filemode' parameters,
             we have to copy them to temp location -->
        <tempfile property="temp.dir.nbexec" destdir="${suite.build.dir}" deleteonexit="true" prefix="nbexec"/>
        <tempfile property="temp.dir.rest" destdir="${suite.build.dir}" deleteonexit="delete" prefix="rest"/>
        <copy todir="${temp.dir.rest}/ide/modules/ext">
            <fileset dir="${nbplatform.active.dir}/ide/modules/ext">
                <include name="${jcodings-1.0.18.jar}"/>
            </fileset>
        </copy>
        <subant genericantfile="${harness.dir}/suite.xml" target="copy-cluster" inheritrefs="true">
            <property name="dest.dir" value="${temp.dir.rest}"/>
            <property name="nbexec.dir" value="${temp.dir.nbexec}"/>
            <property name="build.dir" value="${suite.build.dir}"/>
            <resources refid="zip.platform.clusters"/>
        </subant>
        <zip destfile="${dist.dir}/${app.name}.zip">
            <zipfileset dir="${build.launcher.dir}/bin/" filemode="755" prefix="${app.name}/bin"/>
            <zipfileset dir="${build.launcher.dir}/etc/" prefix="${app.name}/etc"/>
            <zipfileset dir="${temp.dir.nbexec}" filemode="755" prefix="${app.name}"/>
            <zipfileset dir="${temp.dir.rest}" prefix="${app.name}"/>

            <!-- Yes, the doubled app.name is a bit ugly, but better than the alternative; cf. #66441: -->
            <zipfileset dir="${cluster}" prefix="${app.name}/${app.name}">
                <exclude name="config/Modules/*.xml_hidden"/>
            </zipfileset>
        </zip>
    </target>
    
    <!-- Override initializing the app before running -->
    <target name="run" depends="platformInitialize,suite.run" description="X3D-Edit"/>
    
    <target name="echo.harness.properties" description="platform diagnostic">
        <!-- diagnostic best viewed if these are placed in ${harness.dir}/run.xml 
             at the bottom of the -init target immediately downstream of where they 
             get set 
        -->
        
        <echo message="***    cluster.path.id=${toString:cluster.path.id}"/>
        <echo message="***    jvm.arch.string=${jvm.arch.string}"/>
        <echo message="***            install=${install}"/>
        
        <!-- Fix for Don to run X3dEdit3.3 due to a strange path convert to 
             C:\x3d-code\www.web3d.org\x3d\tools\X3dEdit3.3\X3dEditorSuite\teams (why teams?)
             
             which is clobbering the ${install} property in ${harness.dir}/run.xml -init target
             on his machine.
             
             Article on clusters: https://netbeans.apache.org/wiki/DevFaqWhatIsACluster.asciidoc
             Check: $NB_HOME/etc/netbeans.clusters
             
             Search for "/teams" in $NB_HOME/
             Search for "/teams" in <AppData>\NetBeans\etc
             
             Suspect that the refid="cluster.path.id," which is used to form
             ${install}, is getting clobbered with this path instrusion: 
             C:\x3d-code\www.web3d.org\x3d\tools\X3dEdit3.3\X3dEditorSuite\teams
             
             Should be: 
            C:\x3d-code\www.web3d.org\x3d\tools\X3dEdit3.3\X3dEditorSuite\build\cluster
             
        -->
            
        <!-- this override to be pasted at top of ${harness.dir}/suite.xml
        <property name="install" value="C:/Program Files/NetBeans-{version}/netbeans/"/>
        <echo message="install (forced)=${install}"/>
        -->
    </target>
    
    <!-- Override building the app before running -->
    <target name="quick.run" depends="platformInitialize,branding,release,-hide-excluded-modules,-jdk-init"
            description="Runs X3D-Edit in place without building">
        <ant antfile="${harness.dir}/run.xml" target="run">
            <reference refid="cluster.path.id"/>
        </ant>
    </target>
   
    <target name="run.xj3d.browser"
            depends="platformInitialize,-init,-jdk-init"
            description="Run the 3D Simulation Viewer App">
      
        <!-- first look on command line, otherwise use ${scene} property from build.properties -->
        <property name="args" value="${scene}"/>

        <echo message="Xj3D launching ${args}"/>
        <echo message="main.class=${main.class}"/>
        <echo message="app.browser.args=${app.browser.args}"/>
        <echo message="run.xj3d.args=${run.xj3d.args}"/>
        
        <ant antfile="${harness.dir}/run.xml" target="-prepare-as-platform">
            <reference refid="cluster.path.id"/>
        </ant>
        
        <!-- Working directory is apps/browser b/c that's where the javahelp helpset is -->
        <java classname="${main.class}"
              fork="true">

            <!-- Comment out for native DIS handling -->
            <!--sysproperty key="${dis.protocol.handler.prop}"
                         value="${dis.xmpp.protocol.handler}"/-->
            <jvmarg line="${run.xj3d.args}"/>

            <!-- Enable the Smack debugger -->
            <!--jvmarg value="-Dsmack.debugEnabled=true"/-->
            <classpath>
                <fileset dir="${cluster}">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
            
            <!-- ${args} should be the full path to an X3D file -->
            <!-- commandline given/supplied arguments args=%1 etc -->
            <arg line="${app.browser.args} ${args}"/>

        </java>

    </target>

    <!-- Override -->
    <target name="debug" 
            depends="platformInitialize,build,-jdk-init,-jdk-presetdef-nbjpdastart,do.debug" 
            description="Debug after building the entire suite first"/>
    
    <target name="quick.debug" 
            depends="platformInitialize,branding,release,-hide-excluded-modules,-jdk-init,-jdk-presetdef-nbjpdastart,do.debug" 
            description="Debugs X3D-Edit in place without building"/>
    
    <target name="do.debug">
        <fail unless="netbeans.home">This target only works when run from inside the NetBeans IDE.</fail>
        <nbjpdastart name="NetBeans" addressproperty="debug.port" transport="dt_socket">
            <classpath>
                <pathfileset include="**/*.jar">
                    <path refid="cluster.path.id"/>
                </pathfileset>
                <fileset dir="${cluster}">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
        </nbjpdastart>
        <property name="debug.pause" value="y"/>
        <property name="debug.args" value="${run.args} -J-agentlib:jdwp=transport=dt_socket,suspend=${debug.pause},server=n,address=${debug.port}"/>
        <ant antfile="${harness.dir}/run.xml" target="run">
            <property name="run.args" value="${debug.args}"/>
            <reference refid="cluster.path.id"/>
        </ant>
    </target>
    
    <!-- Borrowed from: https://netbeans.apache.org/wiki/DevFaqFixDependencies.asciidoc -->
    <!-- This is good to run from time to time when the NB platform has updated 
         modules, or a newer version has been released. This will parse each
         supporting module's project.xml to see what is no longer needed. If a 
         module is no longer needed, the project.xml will be modified 
         accordingly. It does this by removing modules, one by one, compiling,
         and if there are compile errors, the remove function fails. This is 
         okay. It will then move on to the next module and repeat. At the end of
         this evolution, the internal fix-dependencies will update those modules
         to newer avialable versions. Very useful for keeping the suite at a
         fighthing trim. -->
    <target name="fix-dependencies-all" description="Removes unused compilation dependencies on supporting modules.">
        <echo>Fixing dependencies for suite...</echo>
        <path id="antlib">
            <fileset dir="antJars" includes="*.jar"/>
        </path>
        <!--Define custom task-->
        <taskdef resource="org/netbeans/nbbuild/taskdefs.properties">
            <classpath>
                <pathelement location="${harness.dir}/tasks.jar"/>
            </classpath>
        </taskdef>
        <taskdef resource="ise/antelope/tasks/antlib.xml" classpathref="antlib" uri="antlib:ise.antelope.tasks"/>
        <taskdef resource="net/sf/antcontrib/antlib.xml" classpathref="antlib"/>
        <echo>Create the ant script...</echo>
        <!--Create the ant script-->
        <echo file="versions.xml"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<project name="Fix Versions" basedir="." default="fix">
    <taskdef resource="org/netbeans/nbbuild/taskdefs.properties">
        <classpath>
            <pathelement location="${harness.dir}/tasks.jar"/>
        </classpath>
    </taskdef>
    <target name="fix">
        <property name="build.compiler.deprecation" value="false" />
        <fixdependencies antfile="../../build.xml"
                         buildtarget="netbeans" cleantarget="clean" failonerror="true" sanitycheck="false">]]>
        </echo>
        <!--Now update the versions to fix-->
        <for list="${modules}" delimiter=":" param="cur" trim="true">
            <sequential>
                <!--Read properties-->
                <property file="@{cur}/manifest.mf" prefix="@{cur}"/><!--Major release and implementation version are here-->
                <antelope:if name="1st">
                    <contains string="${@{cur}.OpenIDE-Module}" substring="/"/>
                    <then>
                        <length string="${@{cur}.OpenIDE-Module}" property="@{cur}.length.dist" />
                        <stringutil string="${@{cur}.OpenIDE-Module}" property="@{cur}.OpenIDE-Module.indexOf">
                            <indexof string="/"/>
                        </stringutil>
                        <math result="@{cur}.after" operand1="1" operation="+" operand2="${@{cur}.OpenIDE-Module.indexOf}" datatype="int"/>
                        <substring text="${@{cur}.OpenIDE-Module}" start="${@{cur}.after}" end="${@{cur}.length.dist}" property="@{cur}.release-version"/>
                        <substring text="${@{cur}.OpenIDE-Module}" start="0" end="${@{cur}.OpenIDE-Module.indexOf}" property="@{cur}.OpenIDE-Module"/>
                    </then>
                </antelope:if>
                <property file="@{cur}/nbproject/project.properties" prefix="@{cur}."/><!--Spec version is here-->
                <if>
                    <or>
                        <isset property="@{cur}.release-version"/>
                        <isset property="@{cur}.spec.version.base"/>
                    </or>
                    <then>
                        <echo file="versions.xml" append="true"><![CDATA[
                <replace codenamebase="]]>${@{cur}.OpenIDE-Module}<![CDATA[" addcompiletime="true">
                    <module codenamebase="]]>${@{cur}.OpenIDE-Module}</echo>
                        <if>
                            <isset property="@{cur}.spec.version.base"/>
                            <then>
                                <echo file="versions.xml" append="true"><![CDATA[" spec="]]>${@{cur}.spec.version.base}<![CDATA["]]></echo>
                            </then>
                            <else>
                                <echo file="versions.xml" append="true"><![CDATA[/>]]>
                                </echo>
                            </else>
                        </if>
                        <if>
                            <isset property="@{cur}.release-version"/>
                            <then>
                                <echo file="versions.xml" append="true"><![CDATA[ release="]]>${@{cur}.release-version}<![CDATA["/>]]>
                                </echo>
                            </then>
                            <else>
                                <echo file="versions.xml" append="true"><![CDATA[/>]]>
                                </echo>
                            </else>
                        </if>
                        <echo file="versions.xml" append="true"><![CDATA[
                </replace>]]>
                        </echo>
                    </then>
                </if>
            </sequential>
        </for>
        <echo file="versions.xml" append="true"><![CDATA[
            <fileset dir="nbproject" >
                <include name="project.xml" />
            </fileset>
        </fixdependencies>
    </target>
</project>]]>
        </echo>
        <echo>Create the ant script...Done!</echo>
        <!--Now update modules-->
        <echo>Fixing module dependencies...</echo>
        <subant target="module-fix-dependencies">
            <filelist id="buildfiles" dir=".">
                <file name="${project.edu.nps.moves.kmleditor}/build.xml"/>
                <file name="${project.org.apache}/build.xml"/>
                <file name="${project.org.web3d.x3d.collada}/build.xml"/>
                <file name="${project.org.web3d.x3d.xj3d}/build.xml"/>
                <file name="${project.org.web3d.javahelp}/build.xml"/>
                <file name="${project.org.web3d.x3d.x3dedit.config}/build.xml"/>
                <file name="${project.org.jdom}/build.xml"/>
                <file name="${project.org.web3d.x3d}/build.xml"/>
            </filelist>
        </subant>
        <echo>Fixing module dependencies...Done!</echo>
        <delete file="versions.xml"/>
        <!--Run NB fix dependencies in all modules as well-->
        <echo>Fixing NB dependencies for suite...</echo>
        <subant target="fix-dependencies" buildpath="${modules}"/>
        <echo>Fixing NB dependencies for suite...Done!</echo>
        <echo>Fixing dependencies for suite...Done!</echo>
    </target>

    <target name="all" depends="all.clean,all.build" description="Clean and build all modules"/>
    
    <target name="all.clean" depends="" description="Clean all modules">
        <ant dir="${project.org.apache}"      antfile="build.xml" target="clean"/>
        <echo message="========================================================"/>
        <ant dir="${project.org.web3d.x3d.collada}" antfile="build.xml" target="clean"/>
        <echo message="========================================================"/>
        <ant dir="${project.org.web3d.javahelp}"     antfile="build.xml" target="clean"/>
        <echo message="========================================================"/>
        <ant dir="${project.org.jdom}"         antfile="build.xml" target="clean"/>
        <echo message="========================================================"/>
        <ant dir="${project.edu.nps.moves.kmleditor}" antfile="build.xml" target="clean"/>
        <echo message="========================================================"/>
        <ant dir="${project.org.web3d.x3d.x3dedit.config}" antfile="build.xml" target="clean"/><!-- contained -->
        <echo message="========================================================"/>
        <ant dir="${project.org.web3d.x3d.xj3d}" antfile="build.xml" target="clean"/>
        <echo message="========================================================"/>
        <ant dir="${project.org.web3d.x3d}"   antfile="build.xml" target="clean"/>
        <echo message="========================================================"/>
        <antcall target="clean"/><!-- suite, self -->
        <echo message="========================================================"/>
    </target>
    
    <target name="all.build" depends="" description="Build all modules">
        <ant dir="${project.org.apache}"      antfile="build.xml" target="build"/>
        <echo message="========================================================"/>
        <ant dir="${project.org.web3d.x3d.collada}" antfile="build.xml" target="build"/>
        <echo message="========================================================"/>
        <ant dir="${project.org.web3d.javahelp}"     antfile="build.xml" target="build"/>
        <echo message="========================================================"/>
        <ant dir="${project.org.jdom}"        antfile="build.xml" target="build"/>
        <echo message="========================================================"/>
        <ant dir="${project.edu.nps.moves.kmleditor}" antfile="build.xml" target="build"/>
        <echo message="========================================================"/>
        <ant dir="${project.org.web3d.x3d.x3dedit.config}" antfile="build.xml" target="build"/><!-- contained -->
        <echo message="========================================================"/>
        <ant dir="${project.org.web3d.x3d.xj3d}" antfile="build.xml" target="build"/>
        <echo message="========================================================"/>
        <ant dir="${project.org.web3d.x3d}"  antfile="build.xml" target="build"/>
        <echo message="========================================================"/>
        <antcall target="build"/><!-- suite, self -->
        <echo message="========================================================"/>
    </target>

    <target name="view.X3D-Edit.home.local" description="view local copy of X3D-Edit. home page in web browser (Netbeans only)">
        <echo message="websites/savage.nps.edu/X3D-Edit/X3D-Edit.html" />
        <nbbrowse file="websites/savage.nps.edu/X3D-Edit/X3D-Edit.html" />
        <!-- TODO implementation-independent approach if possible, but note that other Ant approaches usually have to be customized for each OS. -->
    </target>

    <target name="view.X3D-Edit.home.online" description="view online copy of X3D-Edit. home page in web browser (Netbeans only)">
        <echo message="https://savage.nps.edu/X3D-Edit" />
        <nbbrowse url="https://savage.nps.edu/X3D-Edit" />
        <!-- TODO implementation-independent approach if possible, but note that other Ant approaches usually have to be customized for each OS. -->
    </target>
    
</project>
